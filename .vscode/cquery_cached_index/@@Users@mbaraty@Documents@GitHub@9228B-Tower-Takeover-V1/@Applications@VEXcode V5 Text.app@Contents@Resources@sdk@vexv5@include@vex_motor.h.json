15
{"last_modification_time":1564537715,"language":2,"import_file":"/Users/mbaraty/Documents/GitHub/9228B-Tower-Takeover-V1/include/controller.h","args":["clang","-working-directory=/Users/mbaraty/Documents/GitHub/9228B-Tower-Takeover-V1","-xc++","/Users/mbaraty/Documents/GitHub/9228B-Tower-Takeover-V1/include/controller.h","-include","v5_vcs.h","--target=thumbv7-none-eabi","-U","__INT32_TYPE__","-U","__UINT32_TYPE__","-D","__INT32_TYPE__=long","-D","__UINT32_TYPE__=unsigned long","-std=gnu++11","-I","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/include","-I","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/clang/8.0.0/include","-I","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include","-I","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3","-I","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/arm-none-eabi/armv7-ar/thumb","-resource-dir=/usr/local/Cellar/llvm/6.0.1/lib/clang/6.0.1","-Wno-unknown-warning-option","-fparse-all-comments","-isystem/usr/local/include","-isystem/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.0/include","-isysteminclude"],"includes":[],"dependencies":["/Users/mbaraty/Documents/GitHub/9228B-Tower-Takeover-V1/include/controller.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/include/v5_vcs.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/include/v5_api.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/clang/8.0.0/include/stdint.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/stdint.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/machine/_default_types.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/sys/_intsup.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/sys/_stdint.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/include/v5_apitypes.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/include/v5_apiuser.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/include/vex_thread.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/chrono","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/ratio","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/type_traits","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/arm-none-eabi/armv7-ar/thumb/bits/c++config.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/cstdint","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/limits","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/ctime","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/time.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/_ansi.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/sys/config.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/sys/reent.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/clang/8.0.0/include/stddef.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/sys/_types.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/machine/_types.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/sys/lock.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/sys/types.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/sys/cdefs.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/sys/timespec.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/sys/_timespec.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/include/vex_device.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/include/vex_controller.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/functional","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/bits/stl_function.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/typeinfo","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/exception","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/bits/exception_ptr.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/bits/nested_exception.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/bits/hash_bytes.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/new","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/tuple","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/utility","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/bits/stl_pair.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/bits/move.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/bits/concept_check.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/initializer_list","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/array","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/stdexcept","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/string","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/bits/stringfwd.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/bits/memoryfwd.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/bits/char_traits.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/bits/stl_algobase.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/bits/functexcept.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/bits/cpp_type_traits.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/ext/type_traits.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/ext/numeric_traits.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/bits/stl_iterator_base_types.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/bits/stl_iterator_base_funcs.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/bits/stl_iterator.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/bits/ptr_traits.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/bits/postypes.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/cwchar","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/wchar.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/bits/allocator.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/arm-none-eabi/armv7-ar/thumb/bits/c++allocator.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/ext/new_allocator.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/bits/localefwd.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/arm-none-eabi/armv7-ar/thumb/bits/c++locale.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/clocale","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/locale.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/iosfwd","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/cctype","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/ctype.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/bits/ostream_insert.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/bits/basic_string.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/ext/atomicity.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/arm-none-eabi/armv7-ar/thumb/bits/gthr.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/bits/functional_hash.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/bits/basic_string.tcc","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/bits/uses_allocator.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/include/vex_brain.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/include/vex_drivetrain.h","/Users/mbaraty/Documents/GitHub/9228B-Tower-Takeover-V1/include/vex.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/stdio.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/sys/stdio.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/stdlib.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/alloca.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/string.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/math.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/include/v5.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/clang/8.0.0/include/stdarg.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/include/vex_task.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/clang/8.0.0/include/__stddef_max_align_t.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/machine/types.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/include/vex_event.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/include/vex_mevent.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/include/vex_units.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/include/vex_color.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/include/vex_vision.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/backward/binders.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/bits/stl_relops.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/debug/debug.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/bits/predefined_ops.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/bits/cxxabi_forced.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/bits/range_access.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/arm-none-eabi/armv7-ar/thumb/bits/gthr-default.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/arm-none-eabi/armv7-ar/thumb/bits/atomic_word.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/include/vex_triport.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/include/vex_timer.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/include/vex_global.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/include/vex_competition.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/include/vex_motorgroup.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/sys/features.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/clang/8.0.0/include/stdbool.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/include/v5_color.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/include/v5_apiprivate.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/arm-none-eabi/armv7-ar/thumb/bits/os_defines.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/arm-none-eabi/armv7-ar/thumb/bits/cpu_defines.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/newlib.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/machine/ieeefp.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/machine/time.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/bits/parse_numbers.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/bits/atomic_lockfree_defines.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/c++/4.9.3/bits/exception_defines.h","/Applications/VEXcode V5 Text.app/Contents/Resources/sdk/vexv5/gcc/include/machine/stdlib.h"],"skipped_by_preprocessor":[],"types":[{"id":0,"usr":8368589376327801919,"detailed_name":"vex","short_name_offset":0,"short_name_size":3,"kind":3,"hover":"","comments":"","declarations":[],"spell":"22:11-22:14|-1|1|2","extent":"22:1-553:2|-1|1|0","bases":[1],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["22:11-22:14|-1|1|4"]},{"id":1,"usr":13838176792705659279,"detailed_name":"<fundamental>","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[0],"types":[],"funcs":[],"vars":[],"instances":[],"uses":[]},{"id":2,"usr":1987182613032999595,"detailed_name":"vex::motor","short_name_offset":5,"short_name_size":5,"kind":5,"hover":"","comments":"\r\n@prog_lang{block|cpp|pro}\r\n@brief Use the motor class to control motor devices.","declarations":["36:7-36:12|-1|1|4","37:8-37:13|-1|1|4","50:7-50:12|-1|1|4","60:7-60:12|-1|1|4","71:7-71:12|-1|1|4"],"spell":"27:9-27:14|0|2|2","extent":"27:3-552:4|0|2|0","bases":[3],"derived":[],"types":[],"funcs":[0,1,2,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],"vars":[7,8,9,10,11,12],"instances":[],"uses":["36:7-36:12|2|2|4","50:7-50:12|2|2|4","60:7-60:12|2|2|4","71:7-71:12|2|2|4","384:37-384:42|-1|1|4"]},{"id":3,"usr":12573014169591785977,"detailed_name":"vex::device","short_name_offset":5,"short_name_size":6,"kind":0,"hover":"","comments":"","declarations":["27:24-27:30|-1|1|4"],"bases":[],"derived":[2],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["27:24-27:30|-1|1|4"]},{"id":4,"usr":9863315217299931811,"detailed_name":"int32_t","short_name_offset":0,"short_name_size":7,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[7,8],"uses":["36:14-36:21|-1|1|4","40:7-40:14|-1|1|4","50:14-50:21|-1|1|4","60:14-60:21|-1|1|4","71:14-71:21|-1|1|4","145:35-145:42|-1|1|4","537:7-537:14|-1|1|4","538:7-538:14|-1|1|4","550:7-550:14|-1|1|4"]},{"id":5,"usr":15315595881716982353,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["60:29-60:40|-1|1|4","71:29-71:40|-1|1|4"]},{"id":6,"usr":9902271146873654022,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["90:53-90:66|-1|1|4","101:46-101:59|-1|1|4","168:65-168:78|-1|1|4","171:44-171:57|-1|1|4","196:88-196:101|-1|1|4","198:86-198:99|-1|1|4","229:89-229:102|-1|1|4","231:87-231:100|-1|1|4","233:108-233:121|-1|1|4","264:81-264:94|-1|1|4","266:79-266:92|-1|1|4","268:100-268:113|-1|1|4","294:93-294:106|-1|1|4","296:91-296:104|-1|1|4","299:107-299:120|-1|1|4","301:105-301:118|-1|1|4","332:94-332:107|-1|1|4","334:92-334:105|-1|1|4","336:113-336:126|-1|1|4","339:108-339:121|-1|1|4","341:106-341:119|-1|1|4","465:33-465:46|-1|1|4","468:40-468:53|-1|1|4","549:58-549:71|-1|1|4","550:55-550:68|-1|1|4"]},{"id":7,"usr":13233960938812283541,"detailed_name":"vex::percentUnits","short_name_offset":5,"short_name_size":12,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[1,4,5],"uses":["100:53-100:65|-1|1|4","170:65-170:77|-1|1|4","412:51-412:63|-1|1|4","467:33-467:45|-1|1|4","513:35-513:47|-1|1|4","513:56-513:68|-1|1|4","524:36-524:48|-1|1|4"]},{"id":8,"usr":22,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[0,3],"uses":[]},{"id":9,"usr":18241477803818188380,"detailed_name":"vex::brakeType","short_name_offset":5,"short_name_size":9,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[9,10],"uses":["105:33-105:42|-1|1|4","115:36-115:45|-1|1|4","401:29-401:38|-1|1|4","539:7-539:16|-1|1|4","540:7-540:16|-1|1|4","546:40-546:49|-1|1|4"]},{"id":10,"usr":2518119703099383490,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["134:50-134:63|-1|1|4","196:50-196:63|-1|1|4","198:48-198:61|-1|1|4","213:50-213:63|-1|1|4","215:48-215:61|-1|1|4","229:51-229:64|-1|1|4","231:49-231:62|-1|1|4","233:70-233:83|-1|1|4","248:51-248:64|-1|1|4","250:49-250:62|-1|1|4","252:70-252:83|-1|1|4","294:55-294:68|-1|1|4","296:53-296:66|-1|1|4","299:69-299:82|-1|1|4","301:67-301:80|-1|1|4","313:55-313:68|-1|1|4","315:53-315:66|-1|1|4","318:69-318:82|-1|1|4","320:67-320:80|-1|1|4","332:56-332:69|-1|1|4","334:54-334:67|-1|1|4","336:75-336:88|-1|1|4","339:70-339:83|-1|1|4","341:68-341:81|-1|1|4","352:56-352:69|-1|1|4","354:54-354:67|-1|1|4","356:75-356:88|-1|1|4","359:70-359:83|-1|1|4","361:68-361:81|-1|1|4","454:33-454:46|-1|1|4","548:41-548:54|-1|1|4"]},{"id":11,"usr":15601941847586243462,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["145:49-145:58|-1|1|4","264:47-264:56|-1|1|4","266:45-266:54|-1|1|4","268:66-268:75|-1|1|4","278:47-278:56|-1|1|4","280:45-280:54|-1|1|4","282:66-282:75|-1|1|4"]},{"id":12,"usr":2002947408905702631,"detailed_name":"vex::directionType","short_name_offset":5,"short_name_size":13,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[2],"uses":["157:29-157:42|-1|1|4","168:29-168:42|-1|1|4","170:29-170:42|-1|1|4","182:29-182:42|-1|1|4","233:34-233:47|-1|1|4","252:34-252:47|-1|1|4","268:34-268:47|-1|1|4","282:34-282:47|-1|1|4","336:39-336:52|-1|1|4","356:39-356:52|-1|1|4","443:7-443:20|-1|1|4"]},{"id":13,"usr":3040865924321144759,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["182:64-182:76|-1|1|4"]},{"id":14,"usr":18341840222212812719,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["422:51-422:62|-1|1|4","502:31-502:42|-1|1|4"]},{"id":15,"usr":5167826673387378352,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["432:51-432:63|-1|1|4","480:32-480:44|-1|1|4"]},{"id":16,"usr":8153645732879484814,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["491:30-491:40|-1|1|4"]},{"id":17,"usr":6886972144391420033,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["534:36-534:52|-1|1|4"]},{"id":18,"usr":3,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[11],"uses":[]},{"id":19,"usr":13116059786805020697,"detailed_name":"uint32_t","short_name_offset":0,"short_name_size":8,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[12],"uses":["544:7-544:15|-1|1|4"]}],"funcs":[{"id":0,"usr":14169067851442198659,"detailed_name":"void vex::motor::motor(int32_t index)","short_name_offset":10,"short_name_size":5,"kind":9,"storage":1,"hover":"","comments":"\r\n@prog_lang{cpp|pro}\r\n@drawer_cat{constructor}\r\n@block_sig{vex::motor Motor = vex::motor(vex::PORT1);}     \r\n@brief Creates a new motor object on the port specified.\r\n@param index The port index for this motor. The index is zero-based.","declarations":[{"spell":"36:7-36:12|2|2|1","param_spellings":["36:22-36:27"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":1,"usr":15797673612049503199,"detailed_name":"void vex::motor::~motor()","short_name_offset":17,"short_name_size":6,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"37:7-37:13|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":2,"usr":6669165618507262573,"detailed_name":"bool vex::motor::installed()","short_name_offset":17,"short_name_size":9,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"39:23-39:32|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[3],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":3,"usr":15816097909238292831,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[2],"vars":[],"uses":[],"callees":[]},{"id":4,"usr":16870201301013096890,"detailed_name":"int32_t vex::motor::value()","short_name_offset":20,"short_name_size":5,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"40:23-40:28|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[5],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":5,"usr":14870614278949850727,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[4],"vars":[],"uses":[],"callees":[]},{"id":6,"usr":3521163077052934173,"detailed_name":"void vex::motor::motor(int32_t index, bool reverse)","short_name_offset":10,"short_name_size":5,"kind":9,"storage":1,"hover":"","comments":"\r\n@prog_lang{cpp|pro}\r\n@drawer_cat{constructor}\r\n@block_sig{vex::motor Motor = vex::motor(vex::PORT1, false);}\r\n@brief Creates a new motor object on the port specified and sets the reversed flag.\r\n@param index The port index for this motor. The index is zero-based.\r\n@param reverse Sets the reverse flag for the new motor object.","declarations":[{"spell":"50:7-50:12|2|2|1","param_spellings":["50:22-50:27","50:34-50:41"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":7,"usr":18273813714196238222,"detailed_name":"void vex::motor::motor(int32_t index, vex::gearSetting gears)","short_name_offset":10,"short_name_size":5,"kind":9,"storage":1,"hover":"","comments":"\r\n@prog_lang{cpp|pro}\r\n@drawer_cat{constructor}\r\n@block_sig{vex::motor Motor = vex::motor(vex::PORT1, vex::gearSetting::ratio18_1);}\r\n@brief Creates a new motor object on the port specified and sets the gear setting\r\n@param index The port index for this motor. The index is zero-based.\r\n@param gears Sets the gear's setting for the new motor object.","declarations":[{"spell":"60:7-60:12|2|2|1","param_spellings":["60:22-60:27","60:41-60:46"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":8,"usr":10481311224338922773,"detailed_name":"void vex::motor::motor(int32_t index, vex::gearSetting gears, bool reverse)","short_name_offset":10,"short_name_size":5,"kind":9,"storage":1,"hover":"","comments":"\r\n@prog_lang{cpp|pro}\r\n@drawer_cat{constructor}\r\n@block_sig{vex::motor Motor = vex::motor(vex::PORT1, vex::gearSetting::ratio18_1, false);}\r\n@brief Creates a new motor object on the port specified Sets the reversed flag and the gear setting for the new motor object.\r\n@param index The port index for this motor. The index is zero-based.\r\n@param gears Sets the gear's setting for the new motor object.\r\n@param reverse Sets the reverse flag for the new motor object.","declarations":[{"spell":"71:7-71:12|2|2|1","param_spellings":["71:22-71:27","71:41-71:46","71:53-71:60"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":9,"usr":12232070727724382256,"detailed_name":"void vex::motor::setReversed(bool value)","short_name_offset":17,"short_name_size":11,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{cpp|pro}\r\n@drawer_cat{setting}\r\n@block_sig{Motor.setReversed(true);}\r\n@brief Sets the motor mode to \"reverse\", which will make motor commands spin the motor in the opposite direction.\r\n@param value If set to true, motor commands spin the motor in the opposite direction.","declarations":[{"spell":"80:23-80:34|2|2|1","param_spellings":["80:41-80:46"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":10,"usr":6244109434044990752,"detailed_name":"void vex::motor::setVelocity(double velocity, vex::velocityUnits units)","short_name_offset":17,"short_name_size":11,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{cpp|pro}\r\n@drawer_cat{setting}\r\n@block_sig{Motor.setVelocity(50, vex::velocityUnits::rpm);}\r\n@brief Sets the velocity of the motor based on the parameters set in the command. This command will not run the motor.  Any subsequent call that does not contain a specified motor velocity will use this value.\r\n@param velocity Sets the amount of velocity.\r\n@param units The measurement unit for the velocity value.","declarations":[{"spell":"90:23-90:34|2|2|1","param_spellings":["90:43-90:51","90:67-90:72"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":["101:11-101:22|11|3|32"],"callees":[]},{"id":11,"usr":2422966719779072392,"detailed_name":"void vex::motor::setVelocity(double velocity, vex::percentUnits units)","short_name_offset":17,"short_name_size":11,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{block}\r\n@drawer_cat{setting}\r\n@block_sig{Motor.setVelocity(50, percent);}\r\n@brief Sets the velocity of the motor based on the parameters set in the command. This command will not run the motor.  Any subsequent call that does not contain a specified motor velocity will use this value.\r\n@param velocity Sets the amount of velocity.\r\n@param units The measurement unit for the velocity value.","declarations":[],"spell":"100:23-100:34|2|2|2","extent":"100:7-102:8|2|2|0","declaring_type":2,"bases":[],"derived":[],"vars":[0,1],"uses":[],"callees":["101:11-101:22|10|3|32"]},{"id":12,"usr":13417421583945378665,"detailed_name":"void vex::motor::setBrake(vex::brakeType mode)","short_name_offset":17,"short_name_size":8,"kind":6,"storage":1,"hover":"","comments":"Legacy","declarations":[{"spell":"105:23-105:31|2|2|1","param_spellings":["105:43-105:47"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":13,"usr":16148951062950007446,"detailed_name":"void vex::motor::setStopping(vex::brakeType mode)","short_name_offset":17,"short_name_size":11,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{block|cpp|pro}\r\n@drawer_cat{setting}\r\n@block_sig{Motor.setStopping(coast);}\r\n@cpp_sig{Motor.setStopping(vex::brakeType::coast);}\r\n@brief Sets the stopping mode of the motor by passing a brake mode as a parameter.\r\n@param mode The stopping mode can be set to coast, brake, or hold.","declarations":[{"spell":"115:23-115:34|2|2|1","param_spellings":["115:46-115:50"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":14,"usr":11794983912063865719,"detailed_name":"void vex::motor::resetRotation()","short_name_offset":17,"short_name_size":13,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{cpp|pro}\r\n@drawer_cat{setting}\r\n@block_sig{Motor.resetRotation();}\r\n@brief Resets the motor's encoder to the value of zero.","declarations":[{"spell":"123:23-123:36|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":15,"usr":12424549902550758312,"detailed_name":"void vex::motor::setRotation(double value, vex::rotationUnits units)","short_name_offset":17,"short_name_size":11,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{block|cpp|pro}\r\n@drawer_cat{setting}\r\n@block_sig{Motor.setRotation(90, degrees);}\r\n@cpp_sig{Motor.setRotation(90,vex::rotationUnits::deg);}\r\n@brief Sets the value of the motor's encoder to the value specified in the parameter.\r\n@param value Sets the amount of rotation.\r\n@param units The measurement unit for the rotation value.","declarations":[{"spell":"134:23-134:34|2|2|1","param_spellings":["134:43-134:48","134:64-134:69"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":16,"usr":1077360106137676621,"detailed_name":"void vex::motor::setTimeout(int32_t time, vex::timeUnits units)","short_name_offset":17,"short_name_size":10,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{block|cpp|pro}\r\n@drawer_cat{setting}\r\n@block_sig{Motor.setTimeout(30, seconds);}\r\n@cpp_sig{Motor.setTimeout(30, vex::timeUnits::sec);}\r\n@brief Sets the timeout for the motor. If the motor does not reach its' commanded position prior to the completion of the timeout, the motor will stop.\r\n@param time Sets the amount of time.\r\n@param units The measurement unit for the time value.","declarations":[{"spell":"145:23-145:33|2|2|1","param_spellings":["145:43-145:47","145:59-145:64"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":17,"usr":10355649078786045435,"detailed_name":"void vex::motor::spin(vex::directionType dir)","short_name_offset":17,"short_name_size":4,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{block|cpp|pro}\r\n@drawer_cat{action}\r\n@block_sig{Motor.spin(forward);}\r\n@cpp_sig{Motor.spin(vex::directionType::fwd);}\r\n@brief Turns the motor on, and spins it in the specified direction.\r\n@param dir The direction to spin the motor.","declarations":[{"spell":"157:23-157:27|2|2|1","param_spellings":["157:43-157:46"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":18,"usr":13872827095310064054,"detailed_name":"void vex::motor::spin(vex::directionType dir, double velocity, vex::velocityUnits units)","short_name_offset":17,"short_name_size":4,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{cpp|pro}\r\n@drawer_cat{action}\r\n@block_sig{Motor.spin(vex::directionType::fwd,50,vex::velocityUnits::rpm);}\r\n@brief Turns on the motor and spins it in a specified direction and a specified velocity.\r\n@param dir The direction to spin the motor. \r\n@param velocity Sets the amount of velocity.\r\n@param units The measurement unit for the velocity value.","declarations":[{"spell":"168:23-168:27|2|2|1","param_spellings":["168:43-168:46","168:55-168:63","168:79-168:84"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":["171:11-171:15|19|3|32"],"callees":[]},{"id":19,"usr":14198170092017123679,"detailed_name":"void vex::motor::spin(vex::directionType dir, double velocity, vex::percentUnits units)","short_name_offset":17,"short_name_size":4,"kind":6,"storage":1,"hover":"","comments":"","declarations":[],"spell":"170:23-170:27|2|2|2","extent":"170:7-172:8|2|2|0","declaring_type":2,"bases":[],"derived":[],"vars":[2,3,4],"uses":[],"callees":["171:11-171:15|18|3|32"]},{"id":20,"usr":15036082287390161437,"detailed_name":"void vex::motor::spin(vex::directionType dir, double voltage, vex::voltageUnits units)","short_name_offset":17,"short_name_size":4,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{pro}\r\n@drawer_cat{action}\r\n@block_sig{Motor.spin(vex::directionType::fwd,6,vex::voltageUnits::volt);}\r\n@brief Turns on the motor and spins it in a specified direction and a specified voltage.\r\n@param dir The direction to spin the motor. \r\n@param voltage Sets the amount of volts.\r\n@param units The measurement unit for the voltage value.","declarations":[{"spell":"182:23-182:27|2|2|1","param_spellings":["182:43-182:46","182:55-182:62","182:77-182:82"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":21,"usr":7747526612543261998,"detailed_name":"bool vex::motor::rotateTo(double rotation, vex::rotationUnits units, double velocity, vex::velocityUnits units_v, bool waitForCompletion)","short_name_offset":17,"short_name_size":8,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{cpp|pro}\r\n@drawer_cat{action}\r\n@block_sig{Motor.rotateTo(90, vex::rotationUnits::deg, 50, vex::velocityUnits::pct);}\r\n@brief Turns on the motor and spins it to an absolute target rotation value at a specified velocity.\r\n@return Returns a Boolean that signifies when the motor has reached the target rotation value.\r\n@param rotation Sets the amount of rotation.\r\n@param units The measurement unit for the rotation value.\r\n@param velocity Sets the amount of velocity.\r\n@param units_v The measurement unit for the velocity value. \r\n@param waitForCompletion (Optional) If true, your program will wait until the motor reaches the target rotational value. If false, the program will continue after calling this function. By default, this parameter is true.","declarations":[{"spell":"196:23-196:31|2|2|1","param_spellings":["196:40-196:48","196:64-196:69","196:78-196:86","196:102-196:109","196:116-196:133"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":22,"usr":12070026230936902496,"detailed_name":"bool vex::motor::spinTo(double rotation, vex::rotationUnits units, double velocity, vex::velocityUnits units_v, bool waitForCompletion)","short_name_offset":17,"short_name_size":6,"kind":6,"storage":1,"hover":"","comments":"Deprecated","declarations":[{"spell":"198:23-198:29|2|2|1","param_spellings":["198:38-198:46","198:62-198:67","198:76-198:84","198:100-198:107","198:114-198:131"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":23,"usr":4191789931874726472,"detailed_name":"bool vex::motor::rotateTo(double rotation, vex::rotationUnits units, bool waitForCompletion)","short_name_offset":17,"short_name_size":8,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{block|cpp|pro}\r\n@drawer_cat{action}\r\n@block_sig{Motor.rotateTo(90, degrees);}\r\n@cpp_sig{Motor.rotateTo(90,vex::rotationUnits::deg);}\r\n@brief Turns on the motor and spins it to an absolute target rotation value.\r\n@return Returns a Boolean that signifies when the motor has reached the target rotation value.\r\n@parameter_number_override{2}\r\n@return_type_override{void}\r\n@param rotation Sets the amount of rotation.\r\n@param units The measurement unit for the rotation value.        \r\n@param waitForCompletion (Optional) If true, your program will wait until the motor reaches the target rotational value. If false, the program will continue after calling this function. By default, this parameter is true.","declarations":[{"spell":"213:23-213:31|2|2|1","param_spellings":["213:40-213:48","213:64-213:69","213:76-213:93"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":24,"usr":839510926048788130,"detailed_name":"bool vex::motor::spinTo(double rotation, vex::rotationUnits units, bool waitForCompletion)","short_name_offset":17,"short_name_size":6,"kind":6,"storage":1,"hover":"","comments":"Deprecated","declarations":[{"spell":"215:23-215:29|2|2|1","param_spellings":["215:38-215:46","215:62-215:67","215:74-215:91"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":25,"usr":3614469664464422033,"detailed_name":"bool vex::motor::rotateFor(double rotation, vex::rotationUnits units, double velocity, vex::velocityUnits units_v, bool waitForCompletion)","short_name_offset":17,"short_name_size":9,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{cpp|pro}\r\n@drawer_cat{action}\r\n@block_sig{Motor.rotateFor(90,vex::rotationUnits::deg,50,vex::velocityUnits::pct);}\r\n@brief Turns on the motor and spins it to a relative target rotation value at a specified velocity.\r\n@return Returns a Boolean that signifies when the motor has reached the target rotation value.\r\n@param rotation Sets the amount of rotation.\r\n@param units The measurement unit for the rotation value.\r\n@param velocity Sets the amount of velocity.\r\n@param units_v The measurement unit for the velocity value.\r\n@param waitForCompletion (Optional) If true, your program will wait until the motor reaches the target rotational value. If false, the program will continue after calling this function. By default, this parameter is true.","declarations":[{"spell":"229:23-229:32|2|2|1","param_spellings":["229:41-229:49","229:65-229:70","229:79-229:87","229:103-229:110","229:117-229:134"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":26,"usr":771943817647270298,"detailed_name":"bool vex::motor::spinFor(double rotation, vex::rotationUnits units, double velocity, vex::velocityUnits units_v, bool waitForCompletion)","short_name_offset":17,"short_name_size":7,"kind":6,"storage":1,"hover":"","comments":"Deprecated","declarations":[{"spell":"231:23-231:30|2|2|1","param_spellings":["231:39-231:47","231:63-231:68","231:77-231:85","231:101-231:108","231:115-231:132"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":27,"usr":10656691978275590738,"detailed_name":"bool vex::motor::rotateFor(vex::directionType dir, double rotation, vex::rotationUnits units, double velocity, vex::velocityUnits units_v, bool waitForCompletion)","short_name_offset":17,"short_name_size":9,"kind":6,"storage":1,"hover":"","comments":"proposed","declarations":[{"spell":"233:23-233:32|2|2|1","param_spellings":["233:48-233:51","233:60-233:68","233:84-233:89","233:98-233:106","233:122-233:129","233:136-233:153"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":28,"usr":9923245810801408021,"detailed_name":"bool vex::motor::rotateFor(double rotation, vex::rotationUnits units, bool waitForCompletion)","short_name_offset":17,"short_name_size":9,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{block|cpp|pro}\r\n@drawer_cat{action}\r\n@block_sig{Motor.rotateFor(90, degrees);}\r\n@cpp_sig{Motor.rotateFor(90,vex::rotationUnits::deg);}\r\n@brief Turns on the motor and spins it to a relative target rotation value.\r\n@return Returns a Boolean that signifies when the motor has reached the target rotation value.\r\n@parameter_number_override{2}\r\n@return_type_override{void}\r\n@param rotation Sets the amount of rotation.\r\n@param units The measurement unit for the rotation value.        \r\n@param waitForCompletion (Optional) If true, your program will wait until the motor reaches the target rotational value. If false, the program will continue after calling this function. By default, this parameter is true.","declarations":[{"spell":"248:23-248:32|2|2|1","param_spellings":["248:41-248:49","248:65-248:70","248:77-248:94"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":29,"usr":14358656639530527600,"detailed_name":"bool vex::motor::spinFor(double rotation, vex::rotationUnits units, bool waitForCompletion)","short_name_offset":17,"short_name_size":7,"kind":6,"storage":1,"hover":"","comments":"Deprecated","declarations":[{"spell":"250:23-250:30|2|2|1","param_spellings":["250:39-250:47","250:63-250:68","250:75-250:92"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":30,"usr":15282858399718782328,"detailed_name":"bool vex::motor::rotateFor(vex::directionType dir, double rotation, vex::rotationUnits units, bool waitForCompletion)","short_name_offset":17,"short_name_size":9,"kind":6,"storage":1,"hover":"","comments":"proposed","declarations":[{"spell":"252:23-252:32|2|2|1","param_spellings":["252:48-252:51","252:60-252:68","252:84-252:89","252:96-252:113"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":31,"usr":5106758258002564211,"detailed_name":"void vex::motor::rotateFor(double time, vex::timeUnits units, double velocity, vex::velocityUnits units_v)","short_name_offset":17,"short_name_size":9,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{cpp|pro}\r\n@drawer_cat{action}\r\n@block_sig{Motor.rotateFor(2.5, vex::timeUnits::sec, 50, vex::velocityUnits::pct);}\r\n@brief Turns on the motor and spins it to a relative target time value at a specified velocity.\r\n@param time Sets the amount of time.\r\n@param units The measurement unit for the time value.\r\n@param velocity Sets the amount of velocity.\r\n@param units_v The measurement unit for the velocity value.","declarations":[{"spell":"264:23-264:32|2|2|1","param_spellings":["264:41-264:45","264:57-264:62","264:71-264:79","264:95-264:102"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":32,"usr":10049968952156090340,"detailed_name":"void vex::motor::spinFor(double time, vex::timeUnits units, double velocity, vex::velocityUnits units_v)","short_name_offset":17,"short_name_size":7,"kind":6,"storage":1,"hover":"","comments":"Deprecated","declarations":[{"spell":"266:23-266:30|2|2|1","param_spellings":["266:39-266:43","266:55-266:60","266:69-266:77","266:93-266:100"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":33,"usr":15261147241915757486,"detailed_name":"void vex::motor::rotateFor(vex::directionType dir, double time, vex::timeUnits units, double velocity, vex::velocityUnits units_v)","short_name_offset":17,"short_name_size":9,"kind":6,"storage":1,"hover":"","comments":"proposed","declarations":[{"spell":"268:23-268:32|2|2|1","param_spellings":["268:48-268:51","268:60-268:64","268:76-268:81","268:90-268:98","268:114-268:121"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":34,"usr":14265323497459485251,"detailed_name":"void vex::motor::rotateFor(double time, vex::timeUnits units)","short_name_offset":17,"short_name_size":9,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{cpp|pro}\r\n@drawer_cat{action}\r\n@block_sig{Motor.rotateFor(2.5, vex::timeUnits::sec);}\r\n@brief Turns on the motor and spins it to a relative target time value.\r\n@param time Sets the amount of time.\r\n@param units The measurement unit for the time value.","declarations":[{"spell":"278:23-278:32|2|2|1","param_spellings":["278:41-278:45","278:57-278:62"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":35,"usr":15165974533237027464,"detailed_name":"void vex::motor::spinFor(double time, vex::timeUnits units)","short_name_offset":17,"short_name_size":7,"kind":6,"storage":1,"hover":"","comments":"Deprecated","declarations":[{"spell":"280:23-280:30|2|2|1","param_spellings":["280:39-280:43","280:55-280:60"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":36,"usr":4415838948488270909,"detailed_name":"void vex::motor::rotateFor(vex::directionType dir, double time, vex::timeUnits units)","short_name_offset":17,"short_name_size":9,"kind":6,"storage":1,"hover":"","comments":"proposed","declarations":[{"spell":"282:23-282:32|2|2|1","param_spellings":["282:48-282:51","282:60-282:64","282:76-282:81"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":37,"usr":14148732441833202436,"detailed_name":"void vex::motor::startRotateTo(double rotation, vex::rotationUnits units, double velocity, vex::velocityUnits units_v)","short_name_offset":17,"short_name_size":13,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{cpp|pro}\r\n@drawer_cat{action}\r\n@block_sig{Motor.startRotateTo(90,vex::rotationUnits::deg,50,vex::velocityUnits::pct);}\r\n@brief Starts spinning a motor to an absolute target rotation but does not wait for the motor to reach that target.\r\n@param rotation Sets the amount of rotation.\r\n@param units The measurement unit for the rotation value.\r\n@param velocity Sets the amount of velocity.\r\n@param units_v The measurement unit for the velocity value.","declarations":[{"spell":"294:23-294:36|2|2|1","param_spellings":["294:45-294:53","294:69-294:74","294:83-294:91","294:107-294:114"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":38,"usr":17251470208783039353,"detailed_name":"void vex::motor::startSpinTo(double rotation, vex::rotationUnits units, double velocity, vex::velocityUnits units_v)","short_name_offset":17,"short_name_size":11,"kind":6,"storage":1,"hover":"","comments":"Deprecated","declarations":[{"spell":"296:23-296:34|2|2|1","param_spellings":["296:43-296:51","296:67-296:72","296:81-296:89","296:105-296:112"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":39,"usr":12220822136794316922,"detailed_name":"void vex::motor::startRotateTo(int threadId, double rotation, vex::rotationUnits units, double velocity, vex::velocityUnits units_v)","short_name_offset":17,"short_name_size":13,"kind":6,"storage":1,"hover":"","comments":"Modlang version","declarations":[{"spell":"299:23-299:36|2|2|1","param_spellings":["299:42-299:50","299:59-299:67","299:83-299:88","299:97-299:105","299:121-299:128"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":40,"usr":2888416174874380075,"detailed_name":"void vex::motor::startSpinTo(int threadId, double rotation, vex::rotationUnits units, double velocity, vex::velocityUnits units_v)","short_name_offset":17,"short_name_size":11,"kind":6,"storage":1,"hover":"","comments":"Deprecated","declarations":[{"spell":"301:23-301:34|2|2|1","param_spellings":["301:40-301:48","301:57-301:65","301:81-301:86","301:95-301:103","301:119-301:126"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":41,"usr":2530543967643089317,"detailed_name":"void vex::motor::startRotateTo(double rotation, vex::rotationUnits units)","short_name_offset":17,"short_name_size":13,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{block|cpp|pro}\r\n@drawer_cat{action}\r\n@block_sig{Motor.startRotateTo(90,degrees);}\r\n@cpp_sig{Motor.startRotateTo(90,vex::rotationUnits::deg);}\r\n@brief Starts spinning a motor to an absolute target rotation but does not wait for the motor to reach that target.\r\n@param rotation Sets the amount of rotation.\r\n@param units The measurement unit for the rotation value.","declarations":[{"spell":"313:23-313:36|2|2|1","param_spellings":["313:45-313:53","313:69-313:74"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":42,"usr":12174280327845566827,"detailed_name":"void vex::motor::startSpinTo(double rotation, vex::rotationUnits units)","short_name_offset":17,"short_name_size":11,"kind":6,"storage":1,"hover":"","comments":"Deprecated","declarations":[{"spell":"315:23-315:34|2|2|1","param_spellings":["315:43-315:51","315:67-315:72"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":43,"usr":2393417514042849413,"detailed_name":"void vex::motor::startRotateTo(int threadId, double rotation, vex::rotationUnits units)","short_name_offset":17,"short_name_size":13,"kind":6,"storage":1,"hover":"","comments":"Modlang version","declarations":[{"spell":"318:23-318:36|2|2|1","param_spellings":["318:42-318:50","318:59-318:67","318:83-318:88"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":44,"usr":4479751244178836683,"detailed_name":"void vex::motor::startSpinTo(int threadId, double rotation, vex::rotationUnits units)","short_name_offset":17,"short_name_size":11,"kind":6,"storage":1,"hover":"","comments":"Deprecated","declarations":[{"spell":"320:23-320:34|2|2|1","param_spellings":["320:40-320:48","320:57-320:65","320:81-320:86"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":45,"usr":10774118922510234922,"detailed_name":"void vex::motor::startRotateFor(double rotation, vex::rotationUnits units, double velocity, vex::velocityUnits units_v)","short_name_offset":17,"short_name_size":14,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{cpp|pro}\r\n@drawer_cat{action}\r\n@block_sig{Motor.startRotateFor(90,vex::rotationUnits::deg,50,vex::velocityUnits::pct);}\r\n@brief Starts spinning a motor to a relative target rotation but does not wait for the motor to reach that target.\r\n@param rotation Sets the amount of rotation.\r\n@param units The measurement unit for the rotation value. \r\n@param velocity Sets the amount of velocity.\r\n@param units_v The measurement unit for the velocity value.","declarations":[{"spell":"332:23-332:37|2|2|1","param_spellings":["332:46-332:54","332:70-332:75","332:84-332:92","332:108-332:115"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":46,"usr":18325665939818642211,"detailed_name":"void vex::motor::startSpinFor(double rotation, vex::rotationUnits units, double velocity, vex::velocityUnits units_v)","short_name_offset":17,"short_name_size":12,"kind":6,"storage":1,"hover":"","comments":"Deprecated","declarations":[{"spell":"334:23-334:35|2|2|1","param_spellings":["334:44-334:52","334:68-334:73","334:82-334:90","334:106-334:113"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":47,"usr":2049749064592062932,"detailed_name":"void vex::motor::startRotateFor(vex::directionType dir, double rotation, vex::rotationUnits units, double velocity, vex::velocityUnits units_v)","short_name_offset":17,"short_name_size":14,"kind":6,"storage":1,"hover":"","comments":"proposed","declarations":[{"spell":"336:23-336:37|2|2|1","param_spellings":["336:53-336:56","336:65-336:73","336:89-336:94","336:103-336:111","336:127-336:134"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":48,"usr":7530378864022653574,"detailed_name":"void vex::motor::startRotateFor(int threadId, double rotation, vex::rotationUnits units, double velocity, vex::velocityUnits units_v)","short_name_offset":17,"short_name_size":14,"kind":6,"storage":1,"hover":"","comments":"Modlang version","declarations":[{"spell":"339:23-339:37|2|2|1","param_spellings":["339:43-339:51","339:60-339:68","339:84-339:89","339:98-339:106","339:122-339:129"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":49,"usr":15214707177954801196,"detailed_name":"void vex::motor::startSpinFor(int threadId, double rotation, vex::rotationUnits units, double velocity, vex::velocityUnits units_v)","short_name_offset":17,"short_name_size":12,"kind":6,"storage":1,"hover":"","comments":"Deprecated","declarations":[{"spell":"341:23-341:35|2|2|1","param_spellings":["341:41-341:49","341:58-341:66","341:82-341:87","341:96-341:104","341:120-341:127"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":50,"usr":14355367503235160446,"detailed_name":"void vex::motor::startRotateFor(double rotation, vex::rotationUnits units)","short_name_offset":17,"short_name_size":14,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{block|cpp|pro}\r\n@drawer_cat{action}\r\n@block_sig{Motor.startRotateFor(90,degrees);}\r\n@cpp_sig{Motor.startRotateFor(90,vex::rotationUnits::deg);}\r\n@brief Starts spinning a motor to a relative target but does not wait for the motor to reach that target.\r\n@param rotation Sets the amount of rotation.\r\n@param units The measurement unit for the rotation value.","declarations":[{"spell":"352:23-352:37|2|2|1","param_spellings":["352:46-352:54","352:70-352:75"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":51,"usr":5759586645101176306,"detailed_name":"void vex::motor::startSpinFor(double rotation, vex::rotationUnits units)","short_name_offset":17,"short_name_size":12,"kind":6,"storage":1,"hover":"","comments":"Deprecated","declarations":[{"spell":"354:23-354:35|2|2|1","param_spellings":["354:44-354:52","354:68-354:73"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":52,"usr":7761504896189142348,"detailed_name":"void vex::motor::startRotateFor(vex::directionType dir, double rotation, vex::rotationUnits units)","short_name_offset":17,"short_name_size":14,"kind":6,"storage":1,"hover":"","comments":"proposed","declarations":[{"spell":"356:23-356:37|2|2|1","param_spellings":["356:53-356:56","356:65-356:73","356:89-356:94"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":53,"usr":14965025002867525385,"detailed_name":"void vex::motor::startRotateFor(int threadId, double rotation, vex::rotationUnits units)","short_name_offset":17,"short_name_size":14,"kind":6,"storage":1,"hover":"","comments":"Modlang version","declarations":[{"spell":"359:23-359:37|2|2|1","param_spellings":["359:43-359:51","359:60-359:68","359:84-359:89"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":54,"usr":9567633646757930583,"detailed_name":"void vex::motor::startSpinFor(int threadId, double rotation, vex::rotationUnits units)","short_name_offset":17,"short_name_size":12,"kind":6,"storage":1,"hover":"","comments":"Deprecated","declarations":[{"spell":"361:23-361:35|2|2|1","param_spellings":["361:41-361:49","361:58-361:66","361:82-361:87"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":55,"usr":13128873217575877960,"detailed_name":"bool vex::motor::isSpinning()","short_name_offset":17,"short_name_size":10,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{cpp|pro|block}\r\n@drawer_cat{sensing}\r\n@block_sig{Motor.isSpinning()}\r\n@brief Checks to see if the motor is rotating to a specific target.\r\n@return Returns a true Boolean if the motor is on and is rotating to a target. Returns a false Boolean if the motor is done rotating to a target.","declarations":[{"spell":"370:23-370:33|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":56,"usr":17835480299653944344,"detailed_name":"bool vex::motor::isSpinning(int threadId)","short_name_offset":17,"short_name_size":10,"kind":6,"storage":1,"hover":"","comments":"Modlang version","declarations":[{"spell":"373:23-373:33|2|2|1","param_spellings":["373:39-373:47"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":57,"usr":15739483636986261979,"detailed_name":"bool vex::motor::isDone()","short_name_offset":17,"short_name_size":6,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{block}\r\n@drawer_cat{sensing}\r\n@block_sig{Motor.isDone()}\r\n@brief Checks to see if the motor is done rotating to a specific target.\r\n@return Returns a false Boolean if the motor is on and is rotating to a target. Returns a true Boolean if the motor is done rotating to a target.","declarations":[{"spell":"381:23-381:29|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":58,"usr":14918941202704584083,"detailed_name":"void vex::motor::setReference(vex::motor **m)","short_name_offset":17,"short_name_size":12,"kind":6,"storage":1,"hover":"","comments":"Modlang internal function","declarations":[{"spell":"384:23-384:35|2|2|1","param_spellings":["384:45-384:46"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":59,"usr":1458068614360531441,"detailed_name":"void vex::motor::stop()","short_name_offset":17,"short_name_size":4,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{block|cpp|pro}\r\n@drawer_cat{action}\r\n@block_sig{Motor.stop();}\r\n@brief Stops the motor using the default brake mode.","declarations":[{"spell":"392:23-392:27|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":60,"usr":13406459951470382844,"detailed_name":"void vex::motor::stop(vex::brakeType mode)","short_name_offset":17,"short_name_size":4,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{cpp|pro}\r\n@drawer_cat{action}\r\n@block_sig{Motor.stop(vex::brakeType::coast);}\r\n@brief Stops the motor using a specified brake mode.\r\n@param mode The brake mode can be set to coast, brake, or hold.","declarations":[{"spell":"401:23-401:27|2|2|1","param_spellings":["401:39-401:43"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":61,"usr":10843598451499824150,"detailed_name":"void vex::motor::setMaxTorque(double value, vex::percentUnits units)","short_name_offset":17,"short_name_size":12,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{block|cpp|pro}\r\n@drawer_cat{setting}\r\n@block_sig{Motor.setMaxTorque(50,percent);}\r\n@cpp_sig{Motor.setMaxTorque(50,vex::percentUnits::pct);}\r\n@brief Sets the max torque of the motor.\r\n@param value Sets the amount of torque.\r\n@param units The measurement unit for the torque value.","declarations":[{"spell":"412:23-412:35|2|2|1","param_spellings":["412:44-412:49","412:64-412:69"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":62,"usr":10236488650619849714,"detailed_name":"void vex::motor::setMaxTorque(double value, vex::torqueUnits units)","short_name_offset":17,"short_name_size":12,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{pro}\r\n@drawer_cat{setting}\r\n@block_sig{Motor.setMaxTorque(1,vex::torqueUnits::Nm);}\r\n@brief Sets the max torque of the motor.\r\n@param value Sets the amount of torque.\r\n@param units The measurement unit for the torque value.","declarations":[{"spell":"422:23-422:35|2|2|1","param_spellings":["422:44-422:49","422:63-422:68"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":63,"usr":1203458197567866227,"detailed_name":"void vex::motor::setMaxTorque(double value, vex::currentUnits units)","short_name_offset":17,"short_name_size":12,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{pro}\r\n@drawer_cat{setting}\r\n@block_sig{Motor.setMaxTorque(1.25,vex::currentUnits::amps);}\r\n@brief Sets the max torque of the motor.\r\n@param value Sets the amount of torque.\r\n@param units The measurement unit for the torque value.","declarations":[{"spell":"432:23-432:35|2|2|1","param_spellings":["432:44-432:49","432:64-432:69"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":64,"usr":13634468653116295079,"detailed_name":"vex::directionType vex::motor::direction()","short_name_offset":5,"short_name_size":9,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{block|cpp|pro}\r\n@drawer_cat{sensing}\r\n@block_sig{Motor.direction()}\r\n@brief Gets which direction the motor is spinning.\r\n@return Returns the direction that the motor is spinning.","declarations":[{"spell":"443:23-443:32|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":65,"usr":14734217773159443263,"detailed_name":"double vex::motor::rotation(vex::rotationUnits units)","short_name_offset":19,"short_name_size":8,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{block|cpp|pro}\r\n@drawer_cat{sensing}\r\n@block_sig{Motor.rotation(degrees)}\r\n@cpp_sig{Motor.rotation(vex::rotationUnits::deg)}\r\n@brief Gets the current rotation  of the motor's encoder.\r\n@returns Returns a double that represents the current rotation of the motor in the units defined in the parameter.\r\n@param units The measurement unit for the rotation.","declarations":[{"spell":"454:23-454:31|2|2|1","param_spellings":["454:47-454:52"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":66,"usr":6519105095570663522,"detailed_name":"double vex::motor::velocity(vex::velocityUnits units)","short_name_offset":19,"short_name_size":8,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{block|cpp|pro}\r\n@drawer_cat{sensing}\r\n@block_sig{Motor.velocity(rpm)}\r\n@cpp_sig{Motor.velocity(vex::velocityUnits::pct)}\r\n@brief Gets the current velocity of the motor.\r\n@return Returns a double that represents the current velocity of the motor in the units defined in the parameter.\r\n@param units The measurement unit for the velocity.","declarations":[{"spell":"465:23-465:31|2|2|1","param_spellings":["465:47-465:52"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":["468:18-468:26|67|3|32"],"callees":[]},{"id":67,"usr":15866341995766036586,"detailed_name":"double vex::motor::velocity(vex::percentUnits units)","short_name_offset":19,"short_name_size":8,"kind":6,"storage":1,"hover":"","comments":"","declarations":[],"spell":"467:23-467:31|2|2|2","extent":"467:7-469:8|2|2|0","declaring_type":2,"bases":[],"derived":[],"vars":[5],"uses":[],"callees":["468:18-468:26|66|3|32"]},{"id":68,"usr":9865666051248322443,"detailed_name":"double vex::motor::current(vex::currentUnits units)","short_name_offset":19,"short_name_size":7,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{block|cpp|pro}\r\n@drawer_cat{sensing}\r\n@block_sig{Motor.current(amp)}\r\n@cpp_sig{Motor.current(vex::currentUnits::amp)}\r\n@brief Gets the electrical current of the motor.\r\n@return Returns a double that represents the electrical current of the motor in the units defined in the parameter.\r\n@param units The measurement unit for the current.","declarations":[{"spell":"480:23-480:30|2|2|1","param_spellings":["480:45-480:50"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":69,"usr":9416653373849663701,"detailed_name":"double vex::motor::power(vex::powerUnits units)","short_name_offset":19,"short_name_size":5,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{block|cpp|pro}\r\n@drawer_cat{sensing}\r\n@block_sig{Motor.power(watt);}\r\n@cpp_sig{Motor.power(vex::powerUnits::watt)}\r\n@brief Gets the power of the motor.\r\n@return Returns a double that represents the power of the motor in the units defined in the parameter.\r\n@param units The measurement unit for the power.","declarations":[{"spell":"491:23-491:28|2|2|1","param_spellings":["491:41-491:46"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":70,"usr":6846990508768829516,"detailed_name":"double vex::motor::torque(vex::torqueUnits units)","short_name_offset":19,"short_name_size":6,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{block|cpp|pro}\r\n@drawer_cat{sensing}\r\n@block_sig{Motor.torque(newtonMeters)}\r\n@cpp_sig{Motor.torque(vex::torqueUnits::Nm)}\r\n@brief Gets the torque of the motor.\r\n@return Returns a double that represents the torque of the motor in the units defined in the parameter.\r\n@param units The measurement unit for the torque.","declarations":[{"spell":"502:23-502:29|2|2|1","param_spellings":["502:43-502:48"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":71,"usr":3930899001767609216,"detailed_name":"double vex::motor::efficiency(vex::percentUnits units)","short_name_offset":19,"short_name_size":10,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{block|cpp|pro}\r\n@drawer_cat{sensing}\r\n@block_sig{Motor.efficiency(percent)}\r\n@cpp_sig{Motor.efficiency(vex::percentUnits::pct)}\r\n@brief Gets the efficiency of the motor.\r\n@return Returns the efficiency of the motor in the units defined in the parameter.\r\n@param units (Optional) The measurement unit for the efficiency. By default, this parameter is a percentage.","declarations":[{"spell":"513:23-513:33|2|2|1","param_spellings":["513:48-513:53"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":72,"usr":12329876064916333566,"detailed_name":"double vex::motor::temperature(vex::percentUnits units)","short_name_offset":19,"short_name_size":11,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{block|cpp|pro}\r\n@drawer_cat{sensing}\r\n@block_sig{Motor.temperature(percent)}\r\n@cpp_sig{Motor.temperature(vex::percentUnits::pct)}\r\n@brief Gets the temperature  of the motor.\r\n@return Returns the temperature of the motor in the units defined in the parameter.\r\n@param units The measurement unit for the temperature.","declarations":[{"spell":"524:23-524:34|2|2|1","param_spellings":["524:49-524:54"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":73,"usr":17206139980565406824,"detailed_name":"double vex::motor::temperature(vex::temperatureUnits units)","short_name_offset":19,"short_name_size":11,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{cpp|pro}\r\n@drawer_cat{sensing}\r\n@block_sig{Motor.temperature(vex::temperatureUnits::celsius)}\r\n@brief Gets the temperature  of the motor.\r\n@return Returns the temperature of the motor in the units defined in the parameter.\r\n@param units The measurement unit for the temperature.","declarations":[{"spell":"534:23-534:34|2|2|1","param_spellings":["534:53-534:58"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":74,"usr":14717737305071459094,"detailed_name":"void vex::motor::defaultStopping(vex::brakeType mode)","short_name_offset":17,"short_name_size":15,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"546:23-546:38|2|2|1","param_spellings":["546:50-546:54"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":75,"usr":17709732665971401637,"detailed_name":"void vex::motor::setRotationUnits(vex::rotationUnits units)","short_name_offset":17,"short_name_size":16,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"548:23-548:39|2|2|1","param_spellings":["548:55-548:60"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":76,"usr":12643997076995278343,"detailed_name":"double vex::motor::velocityToScaled(double velocity, vex::velocityUnits units)","short_name_offset":19,"short_name_size":16,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"549:23-549:39|2|2|1","param_spellings":["549:48-549:56","549:72-549:77"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":77,"usr":9433147212618182436,"detailed_name":"int32_t vex::motor::scaledToVelocity(double value, vex::velocityUnits units)","short_name_offset":20,"short_name_size":16,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"550:23-550:39|2|2|1","param_spellings":["550:48-550:53","550:69-550:74"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":78,"usr":3020355330557612718,"detailed_name":"double vex::motor::torqueToCurrent(double torque)","short_name_offset":19,"short_name_size":15,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"551:23-551:38|2|2|1","param_spellings":["551:47-551:53"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]}],"vars":[{"id":0,"usr":14694516939184660246,"detailed_name":"double velocity","short_name_offset":7,"short_name_size":8,"hover":"","comments":"","declarations":[],"spell":"100:43-100:51|11|3|2","extent":"100:36-100:51|11|3|0","type":8,"uses":["101:24-101:32|11|3|4"],"kind":253,"storage":1},{"id":1,"usr":5282746268291516998,"detailed_name":"vex::percentUnits units","short_name_offset":18,"short_name_size":5,"hover":"","comments":"","declarations":[],"spell":"100:66-100:71|11|3|2","extent":"100:53-100:71|11|3|0","type":7,"uses":["101:61-101:66|11|3|4"],"kind":253,"storage":1},{"id":2,"usr":3537011327088830121,"detailed_name":"vex::directionType dir","short_name_offset":19,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"170:43-170:46|19|3|2","extent":"170:29-170:46|19|3|0","type":12,"uses":["171:17-171:20|19|3|4"],"kind":253,"storage":1},{"id":3,"usr":16670857916697938346,"detailed_name":"double velocity","short_name_offset":7,"short_name_size":8,"hover":"","comments":"","declarations":[],"spell":"170:55-170:63|19|3|2","extent":"170:48-170:63|19|3|0","type":8,"uses":["171:22-171:30|19|3|4"],"kind":253,"storage":1},{"id":4,"usr":5805820991812983134,"detailed_name":"vex::percentUnits units","short_name_offset":18,"short_name_size":5,"hover":"","comments":"","declarations":[],"spell":"170:78-170:83|19|3|2","extent":"170:65-170:83|19|3|0","type":7,"uses":["171:59-171:64|19|3|4"],"kind":253,"storage":1},{"id":5,"usr":7387831102306416964,"detailed_name":"vex::percentUnits units","short_name_offset":18,"short_name_size":5,"hover":"","comments":"","declarations":[],"spell":"467:46-467:51|67|3|2","extent":"467:33-467:51|67|3|0","type":7,"uses":["468:55-468:60|67|3|4"],"kind":253,"storage":1},{"id":6,"usr":15447115824431573710,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["513:70-513:73|2|2|4"],"kind":0,"storage":0},{"id":7,"usr":10814511952875197106,"detailed_name":"int32_t vex::motor::_timeout","short_name_offset":20,"short_name_size":8,"hover":"","comments":"","declarations":[],"spell":"537:23-537:31|2|2|2","extent":"537:7-537:31|2|2|0","type":4,"uses":[],"kind":8,"storage":0},{"id":8,"usr":17566624257975156858,"detailed_name":"int32_t vex::motor::_velocity","short_name_offset":20,"short_name_size":9,"hover":"","comments":"","declarations":[],"spell":"538:23-538:32|2|2|2","extent":"538:7-538:32|2|2|0","type":4,"uses":[],"kind":8,"storage":0},{"id":9,"usr":11746862039900182995,"detailed_name":"vex::brakeType vex::motor::_mode","short_name_offset":27,"short_name_size":5,"hover":"","comments":"","declarations":[],"spell":"539:23-539:28|2|2|2","extent":"539:7-539:28|2|2|0","type":9,"uses":[],"kind":8,"storage":0},{"id":10,"usr":14771858395343291398,"detailed_name":"vex::brakeType vex::motor::_brakeMode","short_name_offset":27,"short_name_size":10,"hover":"","comments":"","declarations":[],"spell":"540:23-540:33|2|2|2","extent":"540:7-540:33|2|2|0","type":9,"uses":[],"kind":8,"storage":0},{"id":11,"usr":570169464118280903,"detailed_name":"bool vex::motor::_spinMode","short_name_offset":17,"short_name_size":9,"hover":"","comments":"","declarations":[],"spell":"541:23-541:32|2|2|2","extent":"541:7-541:32|2|2|0","type":18,"uses":[],"kind":8,"storage":0},{"id":12,"usr":16726616990546258417,"detailed_name":"uint32_t vex::motor::_isSpinningTimeout","short_name_offset":21,"short_name_size":18,"hover":"","comments":"used with modkit","declarations":[],"spell":"544:23-544:41|2|2|2","extent":"544:7-544:41|2|2|0","type":19,"uses":[],"kind":8,"storage":0},{"id":13,"usr":6984694505332984891,"detailed_name":"VCS_MOTOR_CLASS_H","short_name_offset":0,"short_name_size":17,"hover":"#define VCS_MOTOR_CLASS_H","comments":"","declarations":[],"spell":"15:11-15:28|-1|1|2","extent":"15:11-15:28|-1|1|0","uses":[],"kind":255,"storage":0}]}